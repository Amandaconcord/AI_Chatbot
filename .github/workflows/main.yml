name: ci

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    permissions:              # ðŸ‘ˆ required for OIDC
      id-token: write
      contents: read

    env:
      AZURE_OPENAI_API_KEY: ${{ secrets.AZURE_OPENAI_API_KEY }}

    steps:
    - uses: actions/checkout@v4

    # â”€â”€ Python unit tests â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install deps & run pytest
      run: |
        pip install -r requirements-dev.txt
        pytest -q

    # â”€â”€ Docker build (local only) â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
    - name: Build Docker image
      run: docker build -t loanbot:${{ github.sha }} .

    # â”€â”€ (Optional) push image to ACR â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
    - name: Azure login (OIDC)
      if: ${{ env.ACR_NAME != '' }}
      uses: azure/login@v2
      with:
        tenant-id:        ${{ secrets.AZURE_TENANT_ID }}
        subscription-id:  ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        client-id:        ${{ secrets.AZURE_CLIENT_ID }}

    - name: Push image to ACR
      if: ${{ env.ACR_NAME != '' }}
      run: |
        az acr login --name ${{ env.ACR_NAME }}
        docker tag loanbot:${{ github.sha }} ${{ env.ACR_NAME }}.azurecr.io/loanbot:${{ github.sha }}
        docker push ${{ env.ACR_NAME }}.azurecr.io/loanbot:${{ github.sha }}

  # â”€â”€ (Optional) run pytest **inside** AML env instead of locally â”€â”€â”€â”€â”€â”€â”€â”€â”€
  aml-test:
    if: ${{ false }}        # flip to true when you want AML runs
    needs: test-and-build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
    - uses: actions/checkout@v4
    - uses: azure/login@v2
      with:
        tenant-id:        ${{ secrets.AZURE_TENANT_ID }}
        subscription-id:  ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        client-id:        ${{ secrets.AZURE_CLIENT_ID }}

    - name: Install AML CLI
      run: az extension add -n ml -y

    - name: Submit pytest job to AML
      run: |
        az ml job create \
          --file .azureml/test_job.yml \
          --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
          --workspace-name ${{ secrets.AZURE_WORKSPACE }} \
          --set name=loanbot-smoke-${{ github.run_number }}
